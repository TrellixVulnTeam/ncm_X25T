FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04

MAINTAINER sergei <sergei.0910@gmail.com>

RUN mkdir /root/_INSTALL

WORKDIR /root/_INSTALL

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        software-properties-common \
        build-essential \
        curl \
        wget \
        vim \
        git \
        net-tools \
        iputils-ping \
        netcat \
        tcpdump \
        libfreetype6-dev \
        libpng12-dev \
        libzmq3-dev \
        pkg-config \
        python \
        python-dev \
        python-wheel \
        python-mock \
        rsync \
        zip \
        unzip \
        g++ \
        gfortran \
        mlocate \
        libcupti-dev \
        language-pack-ja-base \
        language-pack-ja \
        tree \
        && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/* && \
        updatedb

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py

RUN pip --no-cache-dir install \
        ipykernel \
        jupyter \
        numpy \
        matplotlib \
        pandas \
        futures \
        flask \
        nose \
        tqdm \
        jedi \
        flake8 \
        autopep8 \
        && \
    python -m ipykernel.kernelspec

# MeCab, ipadic, python
COPY mecab-0.996.tar.gz ./
COPY mecab-ipadic-2.7.0-20070801.tar.gz ./
COPY mecab-python-0.996.tar.gz ./

RUN tar xzf mecab-0.996.tar.gz \
 && cd ./mecab-0.996 \
 && ./configure \
 && make \
 && make check \
 && make install \
 && ldconfig

RUN tar xzf mecab-ipadic-2.7.0-20070801.tar.gz \
 && cd ./mecab-ipadic-2.7.0-20070801 \
 && ./configure --with-charset=utf8 \
 && make \
 && make install

RUN tar xzf mecab-python-0.996.tar.gz \
 && cd ./mecab-python-0.996 \
 && python setup.py build \
 && python setup.py install

# Install Java8
RUN add-apt-repository ppa:webupd8team/java && \
    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
    apt-get update && apt-get install -y oracle-java8-installer

# Install Bazel for building tensorflow
RUN wget https://github.com/bazelbuild/bazel/releases/download/0.4.5/bazel-0.4.5-installer-linux-x86_64.sh && \
    chmod +x bazel-0.4.5-installer-linux-x86_64.sh && \
    ./bazel-0.4.5-installer-linux-x86_64.sh

# Copy cuDNN
COPY cudnn/cudnn-8.0-linux-x64-v6.0.solitairetheme8 /tmp/

RUN tar xzf /tmp/cudnn-8.0-linux-x64-v6.0.solitairetheme8 && \
    cp -a cuda/include/* /usr/local/cuda/include/ && \
    cp -a cuda/lib64/* /usr/local/cuda/lib64/

# Install Tensorflow from source
RUN git clone https://github.com/tensorflow/tensorflow && \
    cd tensorflow && \
    git checkout v1.3.0

COPY workspace.bzl tensorflow/tensorflow/

RUN cd tensorflow && \
    export PYTHON_BIN_PATH=$(which python) && \
    export PYTHON_LIB_PATH="/usr/lib/python2.7/dist-packages" && \
    export TF_NEED_MKL="1" && \
    export TF_DOWNLOAD_MKL="1" && \
    export CC_OPT_FLAGS="-march=native" && \
    export TF_NEED_JEMALLOC="1" && \
    export TF_NEED_GCP="0" && \
    export TF_NEED_HDFS="0" && \
    export TF_NEED_OPENCL="0" && \
    export TF_NEED_S3="0" && \
    export TF_NEED_CUDA="1" && \
    export TF_ENABLE_XLA="1" && \
    export TF_NEED_GDR="1" && \
    export TF_NEED_VERBS="0" && \
    export TF_CUDA_CLANG="0" && \
    export TF_CUDA_VERSION="8.0" && \
    export CUDA_TOOLKIT_PATH="/usr/local/cuda" && \
    export TF_CUDNN_VERSION="6" && \
    export CUDNN_INSTALL_PATH="/usr/local/cuda" && \
    export TF_CUDA_COMPUTE_CAPABILITIES="6.1" && \
    export GCC_HOST_COMPILER_PATH=$(which gcc) && \
    export TF_NEED_MPI="0" && \
    ./configure && \
    bazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-msse4.1 --copt=-msse4.2 --copt=-mfma --config=cuda //tensorflow/tools/pip_package:build_pip_package && \
    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

RUN pip install /tmp/tensorflow_pkg/tensorflow-1.3.0-cp27-cp27mu-linux_x86_64.whl

ENV LANG=ja_JP.UTF-8

RUN echo '# LANG' >> ~/.bash_profile \
 && echo 'export LANG=ja_JP.UTF-8' >> ~/.bash_profile \

RUN git config --global user.name "hiropppe"
RUN git config --global user.email "sergei.0910@gmail.com"

WORKDIR /root
